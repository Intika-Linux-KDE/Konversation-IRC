#!/usr/bin/python
# -*- coding: utf-8 -*-
# sysinfo.py version 0.1
# (C) 2005 by D.C.Powell  achiestdragon@gmail.com
# licensing :-
# this program is licenced in accordance the the GNU GPL
import os
import sys
import commands
import time
from subprocess import *
True = 1
False = 0
global port;
global server;
global target;

def sendit(outmsg,port,server,target):
    Popen(['dcop', port, 'Konversation', 'say', server, target, outmsg]).communicate()

if __name__ == "__main__":
    port = sys.argv[1]
    server = sys.argv[2]
    target = sys.argv[3]
    syst_info = os.uname()
    hostname = syst_info[0]
    osname = syst_info[1]
    osversion = syst_info[2]
    buildcputype = syst_info[4]
    outmsg = "/me System Information for host [" + hostname + "]  is running '" + osname + "'  version : " + osversion + "  built for  " + buildcputype
    sendit(outmsg,port,server,target)
    message = commands.getoutput(" awk -F ':' '/model name/{printf("+'" %s , Running at ",$2)} /cpu MHz/{printf(" %s Mhz , and giving a performance of ",$2)} /bogomips/ {printf("%s %s",$2,"bogomips #" )}'+"' /proc/cpuinfo")
    textAllMessage = "".join(message[0:])
    SplitCpuData = textAllMessage.split("#")
    z = ((len(SplitCpuData))-1)
    if ( z >= 9 ):
        outmsg = "/me a total of %s cpus detected only showing info for first 8 "  %(z)
        sendit(outmsg,port,server,target)
        z = 8
    for n in range (z):
        ident = "/me cpu %s is a " %n
        outmsg = ident + SplitCpuData[n] 
        sendit(outmsg,port,server,target)
    totalmem = commands.getoutput(" free | awk '/Mem:/ {printf("+'"%s",$3/1024" Mb ")}'+"'" )
    usedmem = commands.getoutput(" free | awk '/cache:/ {printf("+'"%s",$3/1024" Mb ")}'+"'" )
    outmsg = "/me Total system memory = " + totalmem + " , used memory = "+usedmem
    sendit(outmsg,port,server,target)
    diskss=commands.getoutput ("df -B 1g -x tmpfs")
    splitalldisk = diskss.split("\n")
    for n in range (len(splitalldisk)):
        tempmess=splitalldisk[n]
        messbits=(tempmess.split(" "))
        for words in range (len(messbits)):
            messbits[words] = messbits[words] + " "
        if (n != 0 ):
            k=0
            outstring = " "
            for word in range (len(messbits)):
                messtemp = messbits[word]
                if  messtemp.startswith(" "):
                    k=k
                elif ( k==k ):
                    outstring = outstring + messbits[word]
            outstringb = outstring.split(" ")
            outmsg = "/me " + outstringb[1] +" is :" + outstringb[2] + "Gb  , (" + outstringb[5] + " used ) : mounted as " + outstringb[6]
            sendit(outmsg,port,server,target)
    uptime = commands.getoutput(" uptime ")
    outmsg = "/me Local time is " + uptime
    sendit(outmsg,port,server,target)
    # weeeee all done now exit