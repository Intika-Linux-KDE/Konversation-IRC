Index: blowfish/b64stuff.cpp
===================================================================
--- blowfish/b64stuff.cpp	(revision 449371)
+++ blowfish/b64stuff.cpp	(working copy)
@@ -98,7 +98,8 @@
 
 static unsigned int raw_base64_decode(unsigned char *in, unsigned char *out,
                                      int strict, int *err) {
-  unsigned int  result = 0, x;
+  unsigned int  result = 0;
+  int x;
   unsigned char buf[3], *p = in, pad = 0;
 
   *err = 0;
Index: blowfish/oldblowfish.cpp
===================================================================
--- blowfish/oldblowfish.cpp	(revision 449371)
+++ blowfish/oldblowfish.cpp	(working copy)
@@ -298,11 +298,11 @@
 		for (i=0;i<255;++i)
 			base64unmap[i]=0;
 		for (i=0;i<64;++i)
-			base64unmap[base64[i]]=i;
+		        base64unmap[(int)base64[i]]=i;
 		didinit=true;
 		}
 
-	return base64unmap[c];
+	return base64unmap[(int)c];
 }
 
 void blowfish_encrypt_pass(char *text, char *str)
Index: blowfish/BlowfishCbc.cpp
===================================================================
--- blowfish/BlowfishCbc.cpp	(revision 449371)
+++ blowfish/BlowfishCbc.cpp	(working copy)
@@ -339,13 +339,13 @@
 	const unsigned char* p = aucLocalKey;
 	unsigned int x=0;
 	//Repeatedly cycle through the key bits until the entire P array has been XORed with key bits
-	int iCount = 0;
+	unsigned int iCount = 0;
 	for(i=0; i<18; i++)
 	{
 		x=0;
 		for(int n=4; n--; )
 		{
-			int iVal = (int)(*p);
+		        //int iVal = (int)(*p);
 			x <<= 8;
 			x |= *(p++);
 			iCount++;
